// Copyright (c) 2020 PaddlePaddle Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless  by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "common.proto";

option go_package = ".;masterpb";
package data_server;

message ShutDownRequest {}
message EmptyRequest {}

message FileListElement {
  int64 idx = 1;
  string path = 2;
}

message FileListRequest {
  string pod_id = 1;
  string reader_name = 2;
  // used for verify
  repeated FileListElement file_list = 3;
}

message FileListResponse {
  common.Status ret = 1;
  repeated FileListElement file_list = 2;
}

message Record {
  int64 record_no = 1;
  repeated bytes field_data = 2;
}

message BatchData {
  string batch_data_id = 1;
  repeated Record records = 2;
}

message BalanceBatchDataRequest {
  string reader_name = 1;
  string pod_id = 2;
  string data_server_endpoint = 4;

  repeated string batch_data_ids = 5;
}

message BalanceBatchData {
  string reader_name = 1;
  string producer_pod_id = 2;
  string consumer_pod_id = 3;
  string data_server_endpoint = 4;

  repeated string batch_data_ids = 5;
}

message BalanceBatchDataResponse {
  common.Status status = 1;
  BalanceBatchData data = 2;
}

message BatchDataResponse {
  common.Status status = 1;
  repeated BatchData datas = 2;
}

service DataServer {
  // only leader can do this
  rpc BalanceBatchData(BalanceBatchData) returns (BalanceBatchDataResponse) {}

  // all data servers can do this
  rpc GetFileList(FileListRequest) returns (FileListResponse) {}
  rpc GetBatchData(BatchDataRequest) returns (BatchDataResponse) {}
}
