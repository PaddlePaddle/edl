// Copyright (c) 2020 PaddlePaddle Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless  by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "common.proto";
package data_server;

message MetaDataRequest {
  int32 batch_size = 1;
  int32 step_num = 2;
}

message DataReader {
  string data_reader = 1;    //  the location of data
  common.FilesMeta meta = 2; // records of files
}

message MetaDataResponse {
  common.RPCRet ret = 1;
  repeated DataReader readers = 2;
}

/*
message Checkpoint{
     string uid = 1;
     string path = 2;
}
*/

message EpochRequest { string epoch_no = 1; }

message DataSourceRequest {}

service DataServer {
  // job_server->data_server
  rpc AssignDataResource(common.DataSource) returns (common.RPCRet) {}
  rpc NewEpoch(EpochRequest) returns (common.RPCRet) {}
  rpc GetMetaData(MetaDataRequest) returns (MetaDataResponse) {}

  // data_reader - > data_server
  rpc GetDataSource(DataSourceRequest) returns (common.DataSource) {}
  rpc ReportFilesMeta(common.FilesMeta) returns (common.RPCRet) {}

  /*
  rpc SaveCheckpoint(Checkpoint) returns (common.RPCRet) {}
  rpc RollBack(Checkpoint) returns (common.RPCRet) {}
  */
}
