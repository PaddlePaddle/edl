// Copyright (c) 2020 PaddlePaddle Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless  by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
option go_package = ".;masterpb";

package common;

message RPCRet {
  string type = 1;
  string detail = 2;
}

message Trainer {
  // string id = 5;
  int32 rank_in_pod = 1;
  int32 global_rank = 2;
  string endpoint = 3;
  repeated int32 gpus = 4;
}

message POD {
  // string id = 1;
  int32 rank = 2;
  string addr = 3;
  int32 port = 4;
  repeated int32 gpus = 5;
  repeated Trainer trainers = 6;
}

message Cluster {
  string job_stage = 1;
  repeated POD pods = 2;
}

message ClusterResponse {
  common.RPCRet ret = 1;
  Cluster cluster = 2;
}

message ClusterRequest { string job_id = 1; }

message ShutDownRequest {}

message RecordRange {
  int64 begin = 1;
  int64 end = 2;
}

enum DataStatus {
  DATA_OK = 0;
  NOT_FOUND = 1;
}

// Chunk is a index(record range) in a file.
// The range is elastic.
message Chunk {
  DataStatus status = 1;
  // only no
  common.RecordRange meta = 2;
}
