// Copyright (c) 2020 PaddlePaddle Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless  by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package common;

message RPCRet {
  int32 err_code = 1;
  int32 err_info = 2;
}

message DataSource { repeated string path = 1; }

message Checkpoint {
  string job_id = 1;
  string job_stage = 2;
  string path = 3;
}

message TaskMeta { string task_id = 1; }

message TasksMeta { repeated TaskMeta tasks_meta = 1; }

message TaskStatus {
  string task_id = 1;
  int32 status = 2;
  string err_inf = 3;
}

message TaskResult {
  TaskStatus status = 1;
  bytes data = 2;
}

// TODO(gongwb): add all of them
message DistStrategy { int32 nccl_comm_num = 1; }

message Program {
  string job_id = 1;
  string job_stage = 2;

  bytes program = 3;
  enum Mode {
    ORIGIN = 0;
    COMPILE = 1;
  }

  Mode mode = 4;
  repeated string reader_var_names = 5;
  DistStrategy dist_strategy = 6;
}

message BatchData { repeated bytes records = 1; }

/*
message TasksData {
  repeated TasksMeta tasks_meta = 1;
  repeated Batch batchs = 1;
}

message TasksResult{
    repeated TaskResult results = 1;
}
*/

message RecordMeta { int64 record_no = 1; }

message FileMeta {
  string file_path = 1;
  repeated RecordMeta metas = 2;
}

message FilesMeta { repeated FileMeta files_meta = 1; }
